// This file is generated by Gemini.
'use server';
/**
 * @fileOverview SEO optimization flow for product descriptions.
 *
 * - optimizeSEO - A function that optimizes product descriptions for SEO.
 * - OptimizeSEOInput - The input type for the optimizeSEO function.
 * - OptimizeSEOOutput - The return type for the optimizeSEO function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeSEOInputSchema = z.object({
  productDescription: z
    .string()
    .describe('The current product description to optimize.'),
  keywords: z.string().describe('Comma separated list of relevant keywords.'),
});
export type OptimizeSEOInput = z.infer<typeof OptimizeSEOInputSchema>;

const OptimizeSEOOutputSchema = z.object({
  optimizedDescription: z
    .string()
    .describe('The optimized product description for SEO.'),
  keywordDensity: z
    .string()
    .describe('Keyword density of the optimized description.'),
  readabilityScore: z
    .string()
    .describe('Readability score of the optimized description.'),
  metaDescription: z
    .string()
    .describe('Suggested meta description for the product.'),
});
export type OptimizeSEOOutput = z.infer<typeof OptimizeSEOOutputSchema>;

export async function optimizeSEO(input: OptimizeSEOInput): Promise<OptimizeSEOOutput> {
  return optimizeSEOFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeSEOPrompt',
  input: {schema: OptimizeSEOInputSchema},
  output: {schema: OptimizeSEOOutputSchema},
  prompt: `You are an SEO expert tasked with optimizing product descriptions.

  Given the following product description and keywords, optimize the description for search engines.
  Consider keyword density, readability, and suggest a meta description.

  Product Description: {{{productDescription}}}
  Keywords: {{{keywords}}}

  Ensure the optimized description is engaging and informative for potential customers.

  Your response should include the optimized description, keyword density, readability score, and a suggested meta description.
`,
});

const optimizeSEOFlow = ai.defineFlow(
  {
    name: 'optimizeSEOFlow',
    inputSchema: OptimizeSEOInputSchema,
    outputSchema: OptimizeSEOOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
